<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMHBwQD///8AWlpaA1RU
        VAFQUFAATExMAE5OTg1FRUWEU1NTZnNzcyegoKAEjY2NAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAurq6AAAA
        AABOTk4+Pj4+cEJCQj5WVlYMRkZGMTc3N8JHR0cr////AIuLiwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAC+vr4ANzc3AE1NTTc3NzffNTU15Tw8PJVBQUF/Nzc30EhISCU/Pz8AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAF1dXQBXV1cEZGRkFDo6OqwzMzP/NDQ0+zk5OeA4ODjlQUFBf0hISEhVVVUW4ODgAHd3
        dwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABHR0cAS0tLDUBAQGVBQUF9PDw8wzU1NfYzMzP/MzMz/zIyMv42NjbwNjY27Tk5
        Ob5CQkJbV1dXDwAAAACysrIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAWVlZAF1dXRBaWlomV1dXDF5eXiA/Pz9ONzc34Do6OuU1NTX6NDQ0/TMzM/8zMzP/MzMz/zMz
        M/8zMzP/MzMz/zU1NfQ7OzupRkZGOW9vbwNWVlYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAH19fQAAAAAAQUFBVEBAQI1LS0snSEhIfj09PY4zMzP6MzMz/zQ0NP80NDT/MzMz/zMz
        M/8zMzP/MzMz/zMzM/8zMzP/MzMz/zQ0NP84ODjTQkJCVWNjYwVRUVEAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAUFBQAGVlZQY7OzuSNjY23UhISEw9PT20Pj4+0TQ0NPszMzP/MzMz/zMz
        M/8zMzP/MzMz/jQ0NPszMzP/MzMz/zQ0NP8zMzP/MjIy/zQ0NP82NjbbQ0NDSAAAAABoaGgAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMbGxgAAAAAATk5ODDs7O6szMzP/PT09qz8/P682Njb9NDQ0/zMz
        M/8zMzP/MzMz/zMzM/81NTXvQkJCtDQ0NPkzMzP/PDw80jc3N94zMzP/ODg47DU1Nfg4ODi4T09PFEVF
        RQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXV1dAGFhYQ1UVFQ8Pj4+qTMzM/81NTX0PDw81TU1
        NfozMzP/MzMz/zMzM/8zMzP/MzMz/zY2Nt9NTU1JNzc31TIyMv86OjqXRUVFVDY2Nuc6OjrGOzs7tzU1
        Ne9FRUVHPz8/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABOTk4AWVlZDUBAQI87OzvfMzMz/jMz
        M/8zMzP+MzMz/zMzM/8zMzP/MzMz/zMzM/8zMzP/Nzc33UhISB87Ozt6NTU19Ds7O3N4eHgFPj4+hzg4
        OLxHR0djODc450FBQWo+Pj4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFJSUgD///8APj4+XTQ0
        NO8zMzP/MzMz/zMzM/8zMzP/MzMz/zMzM/8zMzP/MzMz/zMzM/81NTXqTk5OM0pKSiA6OjquRkZGTiEh
        IQBFRUU6Pz8/lk1NTS03NzfFQkJCXj4+PgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEdH
        RwBOTk4RPDw8jjU1NfQzMzP/NDQ0/zMzM/8zMzP/MzMz/zIyMv8yMjL/MzMz/zQ0NPw/Pz91////AUxM
        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
        P//OAD//xgA//+AAf//wAH//+AD///wB//8=
</value>
  </data>
</root>